/**
 * Script para limpiar completamente la sesi√≥n y forzar recreaci√≥n del perfil
 * √ösalo cuando tengas sesi√≥n activa pero el perfil fue borrado de la BD
 */

async function limpiarSesionCompleta() {
    console.log('üßπ === INICIANDO LIMPIEZA COMPLETA DE SESI√ìN ===');
    
    try {
        // 1. Limpiar localStorage
        console.log('üóëÔ∏è Limpiando localStorage...');
        const itemsToRemove = [
            'matemagica_user',
            'matemagica_profile', 
            'matemagica-user-profile',
            'matemagica_role',
            'matemagica_student_info',
            'currentUser',
            'userProfile',
            'selectedRole'
        ];
        
        itemsToRemove.forEach(item => {
            localStorage.removeItem(item);
            console.log(`  ‚úÖ Removido: ${item}`);
        });
        
        // 2. Limpiar sessionStorage
        console.log('üóëÔ∏è Limpiando sessionStorage...');
        sessionStorage.clear();
        
        // 3. Cerrar sesi√≥n en Supabase si est√° disponible
        if (window.supabaseClient) {
            console.log('üö™ Cerrando sesi√≥n en Supabase...');
            const { error } = await window.supabaseClient.auth.signOut();
            if (error) {
                console.warn('‚ö†Ô∏è Error cerrando sesi√≥n:', error.message);
            } else {
                console.log('‚úÖ Sesi√≥n cerrada en Supabase');
            }
        }
        
        // 4. Limpiar cookies relacionadas (si las hay)
        console.log('üç™ Limpiando cookies...');
        document.cookie.split(";").forEach(function(c) { 
            document.cookie = c.replace(/^ +/, "").replace(/=.*/, "=;expires=" + new Date().toUTCString() + ";path=/"); 
        });
        
        // 5. Limpiar estado del auth manager
        if (window.welcomeAuthManager) {
            console.log('üîÑ Reiniciando auth manager...');
            window.welcomeAuthManager.currentUser = null;
            window.welcomeAuthManager.userProfile = null;
            window.welcomeAuthManager.selectedRole = null;
            window.welcomeAuthManager.studentInfo = null;
            window.welcomeAuthManager.authProcessingCompleted = false;
            window.welcomeAuthManager.supabaseCheckCompleted = false;
        }
        
        console.log('‚úÖ === LIMPIEZA COMPLETA FINALIZADA ===');
        console.log('üîÑ Recargando p√°gina en 2 segundos...');
        
        // 6. Recargar p√°gina despu√©s de un delay
        setTimeout(() => {
            window.location.reload();
        }, 2000);
        
    } catch (error) {
        console.error('‚ùå Error durante la limpieza:', error);
        // Forzar recarga de emergencia
        alert('Error durante la limpieza. Recargando p√°gina...');
        window.location.reload();
    }
}

// Funci√≥n alternativa para solo recrear el perfil manteniendo la sesi√≥n
async function recrearPerfilSolamente() {
    console.log('üîß === RECREANDO PERFIL SIN CERRAR SESI√ìN ===');
    
    try {
        if (!window.welcomeAuthManager || !window.welcomeAuthManager.currentUser) {
            console.error('‚ùå No hay usuario autenticado para recrear perfil');
            return;
        }
        
        const user = window.welcomeAuthManager.currentUser;
        console.log('üë§ Usuario actual:', user.email);
        
        // Limpiar solo datos de perfil
        localStorage.removeItem('matemagica_profile');
        localStorage.removeItem('matemagica-user-profile');
        window.welcomeAuthManager.userProfile = null;
        
        // Forzar recreaci√≥n del perfil
        console.log('üîÑ Forzando recreaci√≥n del perfil...');
        await window.welcomeAuthManager.createOrUpdateUserProfile(user);
        
        console.log('‚úÖ Perfil recreado exitosamente');
        
    } catch (error) {
        console.error('‚ùå Error recreando perfil:', error);
    }
}

// Funci√≥n para verificar estado actual
function verificarEstadoActual() {
    console.log('üîç === VERIFICANDO ESTADO ACTUAL ===');
    
    const estadoLocal = {
        matemagica_user: !!localStorage.getItem('matemagica_user'),
        matemagica_profile: !!localStorage.getItem('matemagica_profile'),
        matemagica_role: localStorage.getItem('matemagica_role'),
        currentUser: !!localStorage.getItem('currentUser')
    };
    
    console.log('üì± Estado localStorage:', estadoLocal);
    
    if (window.welcomeAuthManager) {
        const estadoAuth = {
            isInitialized: window.welcomeAuthManager.isInitialized,
            currentUser: !!window.welcomeAuthManager.currentUser,
            userProfile: !!window.welcomeAuthManager.userProfile,
            selectedRole: window.welcomeAuthManager.selectedRole,
            isAuthenticated: window.welcomeAuthManager.isAuthenticated()
        };
        console.log('üîê Estado AuthManager:', estadoAuth);
    }
    
    if (window.supabaseClient) {
        window.supabaseClient.auth.getUser().then(({ data: { user } }) => {
            console.log('‚òÅÔ∏è Usuario en Supabase:', user ? user.email : 'No autenticado');
        });
    }
}

console.log('üõ†Ô∏è Scripts de limpieza cargados. Usa:');
console.log('‚Ä¢ limpiarSesionCompleta() - Para limpiar todo y empezar de nuevo');
console.log('‚Ä¢ recrearPerfilSolamente() - Para recrear solo el perfil');
console.log('‚Ä¢ verificarEstadoActual() - Para ver el estado actual');